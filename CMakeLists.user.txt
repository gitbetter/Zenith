cmake_minimum_required(VERSION 3.17)
set(CMAKE_CXX_STANDARD 14)

set(MY_PROJECT_NAME @USER_PROJECT_NAME@)
set(ENGINE_DIRECTORY @ENGINE_DIRECTORY@)
set(HEADERS_DIR Headers)
set(SOURCE_DIR Source)

project(${MY_PROJECT_NAME} VERSION 1.0.0 LANGUAGES CXX)

if (MSVC)
  add_definitions(/MP)
endif()

# Set this option to ON to generate a debug build
option(DEBUG "Generate a debug build" OFF)

# List your project sources here
set(SOURCES
${SOURCE_DIR}/Game.cpp
${HEADERS_DIR}/Game.hpp)

file(GLOB_RECURSE ENGINE_HEADERS "${ENGINE_DIRECTORY}/_Headers/*.h" "${ENGINE_DIRECTORY}/_Headers/*.hpp")
list(APPEND SOURCES ${ENGINE_HEADERS})

# List your project include directories here
set(PROJECT_INCLUDE_DIRS ${HEADERS_DIR})

add_executable(${MY_PROJECT_NAME} ${SOURCES})

target_include_directories(${MY_PROJECT_NAME} PUBLIC
@ENGINE_INCLUDES@
${PROJECT_INCLUDE_DIRS})

find_library(ZENITH_LIB NAMES Zenith ZENITH HINTS "${ENGINE_DIRECTORY}/_Bin/Debug" "${ENGINE_DIRECTORY}/_Bin/Release")

target_link_libraries(${MY_PROJECT_NAME}
${ZENITH_LIB})

foreach(FILE ${SOURCES}) 
	get_filename_component(PARENT_DIR "${FILE}" DIRECTORY)
	string(REPLACE "${CMAKE_CURRENT_SOURCE_DIR}" "" GROUP "${PARENT_DIR}")
	string(REPLACE "${ENGINE_DIRECTORY}" "Engine" GROUP "${PARENT_DIR}")
	string(REPLACE "/" "\\" GROUP "${GROUP}")
	source_group("${GROUP}" FILES "${FILE}")
endforeach()